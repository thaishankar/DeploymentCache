//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeploymentCacheClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeploymentCacheRequest", Namespace="http://schemas.datacontract.org/2004/07/DeploymentCacheLib")]
    [System.SerializableAttribute()]
    public partial class DeploymentCacheRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RootDirectoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageVolumePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RootDirectory {
            get {
                return this.RootDirectoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RootDirectoryField, value) != true)) {
                    this.RootDirectoryField = value;
                    this.RaisePropertyChanged("RootDirectory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageVolumePath {
            get {
                return this.StorageVolumePathField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageVolumePathField, value) != true)) {
                    this.StorageVolumePathField = value;
                    this.RaisePropertyChanged("StorageVolumePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeploymentCacheResponse", Namespace="http://schemas.datacontract.org/2004/07/DeploymentCacheLib")]
    [System.SerializableAttribute()]
    public partial class DeploymentCacheResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileContentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileContents {
            get {
                return this.FileContentsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentsField, value) != true)) {
                    this.FileContentsField = value;
                    this.RaisePropertyChanged("FileContents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileLength {
            get {
                return this.FileLengthField;
            }
            set {
                if ((this.FileLengthField.Equals(value) != true)) {
                    this.FileLengthField = value;
                    this.RaisePropertyChanged("FileLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CacheRefreshResponse", Namespace="http://schemas.datacontract.org/2004/07/DeploymentCacheLib")]
    [System.SerializableAttribute()]
    public partial class CacheRefreshResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRefreshSuccessfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileLength {
            get {
                return this.FileLengthField;
            }
            set {
                if ((this.FileLengthField.Equals(value) != true)) {
                    this.FileLengthField = value;
                    this.RaisePropertyChanged("FileLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRefreshSuccessful {
            get {
                return this.IsRefreshSuccessfulField;
            }
            set {
                if ((this.IsRefreshSuccessfulField.Equals(value) != true)) {
                    this.IsRefreshSuccessfulField = value;
                    this.RaisePropertyChanged("IsRefreshSuccessful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SiteName {
            get {
                return this.SiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SiteNameField, value) != true)) {
                    this.SiteNameField = value;
                    this.RaisePropertyChanged("SiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDeploymentCacheOperations")]
    public interface IDeploymentCacheOperations {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeploymentCacheOperations/GetZipFileForSite", ReplyAction="http://tempuri.org/IDeploymentCacheOperations/GetZipFileForSiteResponse")]
        DeploymentCacheClient.ServiceReference1.DeploymentCacheResponse GetZipFileForSite(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeploymentCacheOperations/GetZipFileForSite", ReplyAction="http://tempuri.org/IDeploymentCacheOperations/GetZipFileForSiteResponse")]
        System.Threading.Tasks.Task<DeploymentCacheClient.ServiceReference1.DeploymentCacheResponse> GetZipFileForSiteAsync(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeploymentCacheOperations/RefreshCacheForSite", ReplyAction="http://tempuri.org/IDeploymentCacheOperations/RefreshCacheForSiteResponse")]
        DeploymentCacheClient.ServiceReference1.CacheRefreshResponse RefreshCacheForSite(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeploymentCacheOperations/RefreshCacheForSite", ReplyAction="http://tempuri.org/IDeploymentCacheOperations/RefreshCacheForSiteResponse")]
        System.Threading.Tasks.Task<DeploymentCacheClient.ServiceReference1.CacheRefreshResponse> RefreshCacheForSiteAsync(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeploymentCacheOperationsChannel : DeploymentCacheClient.ServiceReference1.IDeploymentCacheOperations, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeploymentCacheOperationsClient : System.ServiceModel.ClientBase<DeploymentCacheClient.ServiceReference1.IDeploymentCacheOperations>, DeploymentCacheClient.ServiceReference1.IDeploymentCacheOperations {
        
        public DeploymentCacheOperationsClient() {
        }
        
        public DeploymentCacheOperationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeploymentCacheOperationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeploymentCacheOperationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeploymentCacheOperationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DeploymentCacheClient.ServiceReference1.DeploymentCacheResponse GetZipFileForSite(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest) {
            return base.Channel.GetZipFileForSite(cacheRequest);
        }
        
        public System.Threading.Tasks.Task<DeploymentCacheClient.ServiceReference1.DeploymentCacheResponse> GetZipFileForSiteAsync(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest) {
            return base.Channel.GetZipFileForSiteAsync(cacheRequest);
        }
        
        public DeploymentCacheClient.ServiceReference1.CacheRefreshResponse RefreshCacheForSite(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest) {
            return base.Channel.RefreshCacheForSite(cacheRequest);
        }
        
        public System.Threading.Tasks.Task<DeploymentCacheClient.ServiceReference1.CacheRefreshResponse> RefreshCacheForSiteAsync(DeploymentCacheClient.ServiceReference1.DeploymentCacheRequest cacheRequest) {
            return base.Channel.RefreshCacheForSiteAsync(cacheRequest);
        }
    }
}
